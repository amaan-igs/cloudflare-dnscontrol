name: CF-DNSControl Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "domains/*"
      - ".github/workflows/publish-records.yml"
      - "util/reserved.json"
      - "dnsconfig.js"
  pull_request:
    branches:
      - main
    paths:
      - "domains/*"
      - ".github/workflows/publish-records.yml"
      - "util/reserved.json"
      - "dnsconfig.js"
  workflow_dispatch:

jobs:
  preview:
    name: Preview DNS changes
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate creds.json
        run: echo '{"cloudflare":{"TYPE":"CLOUDFLAREAPI","apitoken":"$CLOUDFLARE_API_TOKEN"}}' > creds.json
      - name: DNSControl preview
        uses: amaan-igs/dnscontrol-action@v1
        id: dnscontrol_preview
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        with:
          args: preview
          config_file: dnsconfig.js
          creds_file: creds.json

  push:
    name: Push DNS changes
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate creds.json
        run: echo '{"cloudflare":{"TYPE":"CLOUDFLAREAPI","apitoken":"$CLOUDFLARE_API_TOKEN"}}' > creds.json
      - name: DNSControl push
        uses: amaan-igs/dnscontrol-action@v1
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        with:
          args: push
          config_file: dnsconfig.js
          creds_file: creds.json